/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applicationfinale.Cesar;

import javax.swing.ButtonGroup;
import javax.swing.JPanel;

/**
 *
 * @author ayoub
 */
public class JFrameCesar extends javax.swing.JFrame {

    /**
     * Creates new form JFrameCesar
     */
    public JFrameCesar() {
        setTitle("\t\t\t\t\tLA METHODE DE CESAR  "); 
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TEXTE = new javax.swing.JTextArea();
        cleaC = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        CRYPTERC = new javax.swing.JRadioButton();
        DECRYPTERC = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        AFFICHAGE = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        VALIDER = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 255, 0)));
        jPanel1.setToolTipText("CESAR");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("message  :");

        TEXTE.setColumns(20);
        TEXTE.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        TEXTE.setRows(5);
        jScrollPane1.setViewportView(TEXTE);

        cleaC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cleaC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleaCActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("LA CLE :");

        CRYPTERC.setBackground(new java.awt.Color(255, 255, 51));
        group.add(CRYPTERC);
        CRYPTERC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CRYPTERC.setText("CRYPTER");
        CRYPTERC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CRYPTERCActionPerformed(evt);
            }
        });

        DECRYPTERC.setBackground(new java.awt.Color(255, 255, 51));
        group.add(DECRYPTERC);
        DECRYPTERC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DECRYPTERC.setText("DECRYPTER");
        DECRYPTERC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DECRYPTERCActionPerformed(evt);
            }
        });

        AFFICHAGE.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jScrollPane2.setViewportView(AFFICHAGE);

        jButton1.setBackground(new java.awt.Color(255, 255, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("<--   PRECEDENT  ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        VALIDER.setBackground(new java.awt.Color(255, 255, 51));
        VALIDER.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        VALIDER.setText("VALIDER ");
        VALIDER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VALIDERActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cleaC, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(CRYPTERC)
                        .addGap(173, 173, 173)
                        .addComponent(DECRYPTERC))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(VALIDER, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cleaC, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CRYPTERC)
                    .addComponent(DECRYPTERC))
                .addGap(18, 18, 18)
                .addComponent(VALIDER, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DECRYPTERCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DECRYPTERCActionPerformed
        // TODO add your handling code here:
        String c ="\t\t\t        METHODE DE CESAR (DECRYPTER)\n\n\n";
    	// tableau bString stocke tout les codes numerique
		// des i eme lettre de T T[i]
		String[] bString = new String[TEXTE.getText().replaceAll("\\s","").length()];
		String etape1="";String etape1F ="";
		String etape2="";String etape2F ="";
		String etape3="";String etape3F ="";
		String etape4="";String etape4F ="";
		for (int i = 0; i <TEXTE.getText().replaceAll("\\s","").length(); i++) {
			bString[i] = s.codageNum(TEXTE.getText().replaceAll("\\s","").charAt(i));
		}
		for(int i=0;i<TEXTE.getText().replaceAll("\\s","").length();i++){
		etape1=etape1.concat("  Cn("+TEXTE.getText().replaceAll("\\s","").charAt(i)+")="+bString[i]+"    "); }
    	etape1F="    etape 1  : codage numerique\t : "+etape1;
    	
    	
    	
    	
    	// on va convertir les elements de tableau bString " String "
		// dans un taableau bEntier en  "entier"

		int[] bEntier = new int[TEXTE.getText().replaceAll("\\s","").length()];
		for (int i = 0; i < TEXTE.getText().replaceAll("\\s","").length(); i++) {
			bEntier[i] = Integer.parseInt(bString[i]);
		}
    	
		// etape 2 : on va stocker toute les dechiffrement 
		// dans un tableau de type entier qui s'appele bChiffre 

		int[] bChiffre = new int[TEXTE.getText().replaceAll("\\s","").length()];
		for (int i = 0; i < TEXTE.getText().replaceAll("\\s","").length(); i++) {
				bChiffre[i]=s.dechiffrementC(bEntier[i],Integer.parseInt(cleaC.getText()));
		}
		
		for (int i = 0; i < TEXTE.getText().replaceAll("\\s","").length(); i++) {
			etape2 =etape2.concat("C("+bString[i]+")="+bChiffre[i]+"    ") ;
	       }
		etape2F=etape1F+"\n\n    eatpe 2  : dechiffrement \t\t  : " +etape2;
		
		
		
		
		// traitement de  etat3 : decodage numerique P(i)
		char [] btextchiffre = new char[TEXTE.getText().replaceAll("\\s","").length()];
		for(int i=0;i<TEXTE.getText().replaceAll("\\s","").length();i++){
			if(Character.isUpperCase(TEXTE.getText().replaceAll("\\s","").charAt(i))){
			btextchiffre[i]=s.decodeNummajuscule(bChiffre[i]);}
			else{btextchiffre[i]=s.decodeNumminiscule(bChiffre[i]);}
		}
    	
		
		// affichage finale du text crypté 
		
		for(int i=0;i<TEXTE.getText().replaceAll("\\s","").length();i++){
			etape3=etape3.concat("Cn^-1("+bChiffre[i]+")="+btextchiffre[i] +"   ");
		}
		etape3F=etape2F+"\n\n    etape 3: decodage numerique\t :"+etape3;
		
		
		for(int i=0;i<TEXTE.getText().replaceAll("\\s","").length();i++){
			etape4=etape4.concat(btextchiffre[i]+"");
		}
    	
    	etape4F=c+etape3F+"\n\n\n"+"#################################   AFFICHAGE FINAL   ##################################"+"\n\n"+" \t\t\t\t*********    "+etape4+"  ********";
    	DECRYPTERC.setActionCommand(etape4F);
    	
    	
    	
    	
    	
    	
    	clickdecrypter=true;
        clickcrypter=false;
    }//GEN-LAST:event_DECRYPTERCActionPerformed

    private void CRYPTERCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CRYPTERCActionPerformed
        String c ="\t\t\t       METHODE DE CESAR (CRYPTER)\n\n\n";
    	String[] bString = new String[TEXTE.getText().length()];
		String etape1="";String etape1F ="";
		String etape2="";String etape2F ="";
		String etape3="";String etape3F ="";
		String etape4="";String etape4F ="";
		
		
		for (int i = 0; i <TEXTE.getText().replaceAll("\\s","").length(); i++) {
			bString[i] = s.codageNum(TEXTE.getText().replaceAll("\\s","").charAt(i));
		}
		for(int i=0;i<TEXTE.getText().replaceAll("\\s","").length();i++){
		etape1=etape1.concat("  Cn("+TEXTE.getText().replaceAll("\\s","").charAt(i)+")="+bString[i]+"    "); }
    	        etape1F="    eatpe 1  : codage numerique \t:   "+etape1;
    	
    	
    	
    	
    	// on va convertir les elements de tableau bString " String "
		// dans un taableau bEntier en  "entier"

		int[] bEntier = new int[TEXTE.getText().replaceAll("\\s","").length()];
		for (int i = 0; i < TEXTE.getText().replaceAll("\\s","").length(); i++) {
			bEntier[i] = Integer.parseInt(bString[i]);
		}
    	
		// etape 2 : on va stocker toute les chiffrement 
		// dans un tableau de type entier qui s'appele bChiffre

		int[] bChiffre = new int[TEXTE.getText().length()];
		for (int i = 0; i < TEXTE.getText().replaceAll("\\s","").length(); i++) {
				bChiffre[i]=s.chiffrementC(bEntier[i],Integer.parseInt(cleaC.getText()));
		}
		
		for (int i = 0; i < TEXTE.getText().replaceAll("\\s","").length(); i++) {
			etape2 =etape2.concat("C("+bString[i]+")="+bChiffre[i]+"    ") ;
	       }
		etape2F=etape1F+"\n\n    eatpe 2  : chiffrement                 :   " +etape2;
		
		
		
		
		// traitement de  etat3 : decodage numerique P(i)
		char [] btextchiffre = new char[TEXTE.getText().length()];
		for(int i=0;i<TEXTE.getText().replaceAll("\\s","").length();i++){
			if(Character.isUpperCase(TEXTE.getText().replaceAll("\\s","").charAt(i))){
			btextchiffre[i]=s.decodeNummajuscule(bChiffre[i]);}
			else{btextchiffre[i]=s.decodeNumminiscule(bChiffre[i]);}
		}
    	
		
		// affichage finale du text crypté 
		
		for(int i=0;i<TEXTE.getText().replaceAll("\\s","").length();i++){
			etape3=etape3.concat("Cn^-1("+bChiffre[i]+")="+btextchiffre[i] +"   ");
		}
		etape3F=etape2F+"\n\n    etape 3: decodage numerique\t :   "+etape3;
		
		
		for(int i=0;i<TEXTE.getText().replaceAll("\\s","").length();i++){
			etape4=etape4.concat(btextchiffre[i]+"");
		}
    	
    	etape4F=c+etape3F+"\n\n\n"+"#################################   AFFICHAGE FINAL   ##################################"+"\n\n"+" \t\t\t\t*********    "+etape4+"  ********";
    	CRYPTERC.setActionCommand(etape4F);
    	
    //	CRYPTER.setActionCommand(etape3F);
    	
    
		clickcrypter=true;
                clickdecrypter=false;
    }//GEN-LAST:event_CRYPTERCActionPerformed

    private void cleaCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleaCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cleaCActionPerformed

    private void VALIDERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VALIDERActionPerformed
        // TODO add your handling code here:
        if(TEXTE.getText().isEmpty()&&cleaC.getText().isEmpty()){
    		AFFICHAGE.setText("\n\n\n\n\n\t\t\t\t\t /!\\s'il  te plais remplir le  messsage ou  le cle  a /!\\ ");
    		
    	}
        
        else{
    	if(clickcrypter==false&&clickdecrypter==false){
 		   AFFICHAGE.setText("\n\n\n\n\n\t\t\t\t\t/!\\s'il  te plais choisis un button ou donnez la cle /!\\ ");
 	   }else if(clickcrypter==true){
 	   AFFICHAGE.setText(CRYPTERC.getActionCommand());
 	  
 	   }else if(clickdecrypter==true){
     	   AFFICHAGE.setText(DECRYPTERC.getActionCommand());
     	  	   }
    }//GEN-LAST:event_VALIDERActionPerformed

        
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameCesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameCesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameCesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCesar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameCesar().setVisible(true);
            }
        });
    }
    Cesar s = new  Cesar();
    ButtonGroup group = new ButtonGroup();
    boolean  clickcrypter =false;
    boolean clickdecrypter=false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane AFFICHAGE;
    private javax.swing.JRadioButton CRYPTERC;
    private javax.swing.JRadioButton DECRYPTERC;
    private javax.swing.JTextArea TEXTE;
    private javax.swing.JButton VALIDER;
    private javax.swing.JTextField cleaC;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
