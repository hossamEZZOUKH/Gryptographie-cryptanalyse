/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applicationfinale;

import applicationfinale.Affine.JFrameAffine;
import applicationfinale.Cesar.JFrameCesar;
import applicationfinale.CrypranalyseMultiplication.MultiplicationAnalyse;
import applicationfinale.CryptanaliseCesar.CesarCryptanalyse;
import applicationfinale.CryptanalyseAffine.AffinAnalyse;

import applicationfinale.Hill.FrameHill;
import applicationfinale.Multiplication.JFrameMultiplication;
import applicationfinale.Vigenere.JFrameVigenere;
import javax.swing.ButtonGroup;

/**
 *
 * @author ayoub
 */
public class Cryptanalyse extends javax.swing.JFrame {

    /**
     * Creates new form Acceuil
     */
    public Cryptanalyse() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        SUIVANT = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CESARS = new javax.swing.JRadioButton();
        MULTIPLICATIONS = new javax.swing.JRadioButton();
        AFFINES = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 2, 5, 2, new java.awt.Color(255, 255, 51)));

        jProgressBar1.setBackground(new java.awt.Color(255, 51, 51));
        jProgressBar1.setForeground(new java.awt.Color(0, 153, 153));

        SUIVANT.setBackground(new java.awt.Color(255, 255, 102));
        SUIVANT.setFont(new java.awt.Font("Kalinga", 1, 14)); // NOI18N
        SUIVANT.setText("SUIVANT  -->");
        SUIVANT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUIVANTActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("     Cryptanalyse des méthodes de substitution");
        jLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 4, true));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setText("Cryptanalyse des méthodes de substitution : ");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 0));
        jLabel8.setText("Cryptanalyse du chiffrement mono alphabétique monogrammique : ");

        group.add(CESARS);
        CESARS.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        CESARS.setText("CESAR");
        CESARS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CESARSActionPerformed(evt);
            }
        });

        group.add(MULTIPLICATIONS);
        MULTIPLICATIONS.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MULTIPLICATIONS.setText("MULTIPLICATION");
        MULTIPLICATIONS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MULTIPLICATIONSActionPerformed(evt);
            }
        });

        group.add(AFFINES);
        AFFINES.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AFFINES.setText("AFFINE");
        AFFINES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AFFINESActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("<-- PRECEDENT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SUIVANT, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MULTIPLICATIONS)
                                    .addComponent(CESARS)
                                    .addComponent(AFFINES))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(43, 43, 43)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CESARS)
                .addGap(40, 40, 40)
                .addComponent(MULTIPLICATIONS)
                .addGap(58, 58, 58)
                .addComponent(AFFINES)
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SUIVANT, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
            .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AFFINESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AFFINESActionPerformed
        testAffineS =true;
        testMultiplicationC=false;
        testCesarC=false;
        testCesarC=false;
        testAffineC =false;
        testHillC=false;
        testVigenereC=false;
        testCesarS=false;

        testMultiplicationS=false;
        testHillS=false;
        testVigenereS=false;
    }//GEN-LAST:event_AFFINESActionPerformed

    private void MULTIPLICATIONSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MULTIPLICATIONSActionPerformed
        testMultiplicationS=true;
        testMultiplicationC=false;
        testCesarC=false;
        testCesarC=false;
        testAffineC =false;
        testHillC=false;
        testVigenereC=false;
        testCesarS=false;
        testAffineS =false;

        testHillS=false;
        testVigenereS=false;
    }//GEN-LAST:event_MULTIPLICATIONSActionPerformed

    private void CESARSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CESARSActionPerformed
        testCesarS=true;
        testMultiplicationC=false;
        testCesarC=false;
        testCesarC=false;
        testAffineC =false;
        testHillC=false;
        testVigenereC=false;

        testAffineS =false;
        testMultiplicationS=false;
        testHillS=false;
        testVigenereS=false;
    }//GEN-LAST:event_CESARSActionPerformed

    private void SUIVANTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUIVANTActionPerformed
        // applicationfinale.Hill.Affichage ex1 = new  applicationfinale.Hill.Affichage();
        // ex1.setVisible(true);
        // cryptographie
        JFrameCesar c = new JFrameCesar();
        JFrameMultiplication m = new  JFrameMultiplication();
        JFrameAffine  a = new  JFrameAffine();
        FrameHill h  = new  FrameHill();
        JFrameVigenere v = new JFrameVigenere();

        if(testCesarC==true){
            c.setVisible(true);

        }

        if(testMultiplicationC==true){
            m.setVisible(true);

        }

        if(testAffineC==true){
            a.setVisible(true);
        }

        if(testHillC==true){
            h.setVisible(true);
        }

        if (testVigenereC==true){
            v.setVisible(true);
        }
        // cryptanalyse
        CesarCryptanalyse  cc = new CesarCryptanalyse();
        MultiplicationAnalyse cm = new MultiplicationAnalyse();
        AffinAnalyse  ca = new AffinAnalyse();


        if(testCesarS==true){
            cc.setVisible(true);
        }

        if(testMultiplicationS==true){
            cm.setVisible(true);
        }

        if(testAffineS==true){
            ca.setVisible(true);
        }

      
    }//GEN-LAST:event_SUIVANTActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cryptanalyse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cryptanalyse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cryptanalyse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cryptanalyse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cryptanalyse().setVisible(true);
            }
        });
    }
    ButtonGroup group = new ButtonGroup();
    boolean testCesarC=false;
    boolean  testAffineC =false;
    boolean testMultiplicationC=false;
    boolean  testHillC=false;
    boolean testVigenereC=false;
    
     boolean testCesarS=false;
    boolean  testAffineS =false;
    boolean testMultiplicationS=false;
    boolean  testHillS=false;
    boolean testVigenereS=false;
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AFFINES;
    private javax.swing.JRadioButton CESARS;
    private javax.swing.JRadioButton MULTIPLICATIONS;
    private javax.swing.JButton SUIVANT;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}
