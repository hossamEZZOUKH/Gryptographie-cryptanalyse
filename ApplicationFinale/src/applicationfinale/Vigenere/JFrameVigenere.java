/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applicationfinale.Vigenere;

import javax.swing.ButtonGroup;

/**
 *
 * @author ayoub
 */
public class JFrameVigenere extends javax.swing.JFrame {

    /**
     * Creates new form JFrameVigenere
     */
    public JFrameVigenere() {
        setTitle("\t\t\t\t\tMETHODE DE VIGENERE "); 
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MESSAGE = new javax.swing.JTextArea();
        CLE = new javax.swing.JTextField();
        CRYPTER = new javax.swing.JRadioButton();
        DECRYPTER = new javax.swing.JRadioButton();
        VALIDER = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        EXIT = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        AFFICHAGE = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 255, 0)));

        MESSAGE.setColumns(20);
        MESSAGE.setFont(new java.awt.Font("Meiryo", 1, 18)); // NOI18N
        MESSAGE.setRows(5);
        jScrollPane1.setViewportView(MESSAGE);

        CLE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CLE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEActionPerformed(evt);
            }
        });

        group.add(CRYPTER);
        CRYPTER.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        CRYPTER.setText("CRYPTER");
        CRYPTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CRYPTERActionPerformed(evt);
            }
        });

        group.add(DECRYPTER);
        DECRYPTER.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DECRYPTER.setText("DECRYPTER");
        DECRYPTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DECRYPTERActionPerformed(evt);
            }
        });

        VALIDER.setBackground(new java.awt.Color(255, 255, 0));
        VALIDER.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        VALIDER.setText("VALIDER");
        VALIDER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VALIDERActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("LE MESSAGE :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("LA CLE :");

        EXIT.setBackground(new java.awt.Color(255, 255, 0));
        EXIT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        EXIT.setText("<-- PRESEDENT");
        EXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXITActionPerformed(evt);
            }
        });

        AFFICHAGE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jScrollPane2.setViewportView(AFFICHAGE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(254, 254, 254)
                            .addComponent(jLabel2)
                            .addGap(66, 66, 66)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(CRYPTER)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DECRYPTER))
                                .addComponent(CLE, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(451, 451, 451)
                            .addComponent(VALIDER, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(EXIT, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(233, 233, 233))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(CLE, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CRYPTER)
                    .addComponent(DECRYPTER))
                .addGap(6, 6, 6)
                .addComponent(VALIDER, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EXIT, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CLEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CLEActionPerformed

    private void CRYPTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CRYPTERActionPerformed


        // TODO add your handling code here:
        
        String ch ="\t\t\t METHODE DE VIGENERE (CRYPTER)\n\n";
        String etape1="";String etape1F ="";
		String etape2="";String etape2F ="";
		String etape3="";String etape3F ="";
                
		String etape4="";String etape4F ="";
                String etape5="";
                int[] KDM = new int[ MESSAGE.getText().replaceAll("\\s","").length()];
			int[] KDC = new int[ CLE.getText().replaceAll("\\s","").length()];
			int[] chif = new int[ MESSAGE.getText().replaceAll("\\s","").length()];
			int[] dech = new int[ MESSAGE.getText().replaceAll("\\s","").length()];
                        KDC = Vigenere.codagNum(CLE.getText().replaceAll("\\s",""));
                        KDM = Vigenere.codagNum(MESSAGE.getText().replaceAll("\\s",""));
                        
                        for (int i = 0; i < KDC.length; i++) {
				KDC[i] = KDC[i] - 1;
			}
                        chif = Vigenere.chifrement(KDM, KDC);
                        
                for (int i = 0; i < MESSAGE.getText().replaceAll("\\s","").length(); i++) {
				etape1=etape1+MESSAGE.getText().replaceAll("\\s","").charAt(i) + "      ";
			}
                etape1F="  texte  clair      :    "+etape1;
                
                for (int i = 0; i < MESSAGE.getText().replaceAll("\\s","").length(); i++) {

				etape2=etape2+CLE.getText().replaceAll("\\s","").charAt(i %CLE.getText().length()) + "      ";
			}
                        etape2F=etape1F+"\n\n  la cle               :    " +etape2;
                for (int i = 0; i < MESSAGE.getText().replaceAll("\\s","").length(); i++) {
				if (KDC[i % KDC.length] < 10) {
					etape3=etape3+KDC[i % KDC.length] + "      ";
				} else {
					etape3=etape3+KDC[i % KDC.length] + "   ";
				}

                }
                etape3F=etape2F+"\n\n  decalage        :   "+etape3;
                char[] cr = new char[MESSAGE.getText().replaceAll("\\s","").length()];
			cr = Vigenere.Deco(chif);
                for (int i = 0; i < cr.length; i++) {
			etape4=etape4+cr[i] + "      ";
			}
                etape4F=etape3F+"\n\n  chiffrement   :   "+etape4;
                
                			etape5=ch+etape4F+"\n\n\n"+" \t\t*********  affichage final  :  "+etape4.replaceAll("\\s","")+"  ********";
	    	CRYPTER.setActionCommand(etape5);
	    	clickcrypter=true;
                clickdecrypter=false;
                
    }//GEN-LAST:event_CRYPTERActionPerformed

    private void EXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXITActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_EXITActionPerformed

    private void DECRYPTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DECRYPTERActionPerformed
        // TODO add your handling code here:
        String ch ="\t\t\t METHODE DE VIGENERE (DECRYPTER)\n\n";
        String etape1="";String etape1F ="";
		String etape2="";String etape2F ="";
		String etape3="";String etape3F ="";
                
		String etape4="";String etape4F ="";
                String etape5="";
                int[] KDM = new int[ MESSAGE.getText().replaceAll("\\s","").length()];
			int[] KDC = new int[ CLE.getText().replaceAll("\\s","").length()];
			int[] chif = new int[ MESSAGE.getText().replaceAll("\\s","").length()];
			int[] dech = new int[ MESSAGE.getText().replaceAll("\\s","").length()];
                        KDC = Vigenere.codagNum(CLE.getText().replaceAll("\\s",""));
                        KDM = Vigenere.codagNum(MESSAGE.getText().replaceAll("\\s",""));
                        
                        for (int i = 0; i < KDC.length; i++) {
				KDC[i] = KDC[i] - 1;
			}
                        chif = Vigenere.dechifrement(KDM, KDC);
                        
                for (int i = 0; i < MESSAGE.getText().replaceAll("\\s","").length(); i++) {
				etape1=etape1+MESSAGE.getText().replaceAll("\\s","").charAt(i) + "      ";
			}
                etape1F="  texte  clair         :    "+etape1;
                
                for (int i = 0; i < MESSAGE.getText().replaceAll("\\s","").length(); i++) {

				etape2=etape2+CLE.getText().replaceAll("\\s","").charAt(i %CLE.getText().length()) + "      ";
			}
                        etape2F=etape1F+"\n\n  la cle                  :    " +etape2;
                for (int i = 0; i < MESSAGE.getText().replaceAll("\\s","").length(); i++) {
				if (KDC[i % KDC.length] < 10) {
					etape3=etape3+KDC[i % KDC.length] + "      ";
				} else {
					etape3=etape3+KDC[i % KDC.length] + "   ";
				}

                }
                etape3F=etape2F+"\n\n  decalage           :   "+etape3;
                char[] cr = new char[MESSAGE.getText().replaceAll("\\s","").length()];
			cr = Vigenere.Deco(chif);
                for (int i = 0; i < cr.length; i++) {
			etape4=etape4+cr[i] + "      ";
			}
                etape4F=etape3F+"\n\n  dechiffrement   :   "+etape4;
                
                			etape5=ch+etape4F+"\n\n\n"+" \t\t*********  affichage final  :  "+etape4.replaceAll("\\s","")+"  ********";
	    	DECRYPTER.setActionCommand(etape5);
	    	clickdecrypter=true;
                clickcrypter=false;
    }//GEN-LAST:event_DECRYPTERActionPerformed

    private void VALIDERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VALIDERActionPerformed
        // TODO add your handling code here:
        if(clickcrypter==false&&clickdecrypter==false){
    			
    			AFFICHAGE.setText("\n\n\n\n\n\t\t\t /!\\s'il  te plais appuyer sur un boutton /!\\ ");
    		}
    		else if(clickcrypter==true){
    			AFFICHAGE.setText(CRYPTER.getActionCommand());
    			clickcrypter=false;
    		}
    		else if(clickdecrypter==true){
    			AFFICHAGE.setText(DECRYPTER.getActionCommand());
    			clickdecrypter=false;
    		}
    }//GEN-LAST:event_VALIDERActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameVigenere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameVigenere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameVigenere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameVigenere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameVigenere().setVisible(true);
            }
        });
    }
    ButtonGroup group = new  ButtonGroup();
    boolean  clickcrypter = false;
    boolean  clickdecrypter=false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane AFFICHAGE;
    private javax.swing.JTextField CLE;
    private javax.swing.JRadioButton CRYPTER;
    private javax.swing.JRadioButton DECRYPTER;
    private javax.swing.JButton EXIT;
    private javax.swing.JTextArea MESSAGE;
    private javax.swing.JButton VALIDER;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
